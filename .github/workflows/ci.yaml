name: Code testing

on:
  push:
    branches:
      - 'feature/*'
  workflow_dispatch:




permissions:
  contents: write



jobs:
    lint-check:
      runs-on: ubuntu-latest
      steps:
          - name: Checkout Code
            uses: actions/checkout@v4
          - name: Set up python
            uses: actions/setup-python@v5
            with:
              python-version: 3.12
          
          - name: install dependencies dev
            run: pip install --no-cache-dir -r requirements-dev.txt
      
          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install --no-cache-dir -r ./app/requirements.txt
          - name: Analysing the code with pylint
            run: |
                pylint --exit-zero ./app/
    
    

    # CodeQL_Advanced:
    #   name: CodeQL Advanced
    #   needs: lint-check 
    #   runs-on: ubuntu-latest
    #   permissions:
    #       actions: read
    #       contents: read
    #       security-events: write
    #   steps:
    #     - name: Checkout code
    #       uses: actions/checkout@v2
    #     - name: Set up CodeQL
    #       uses: github/codeql-action/init@v3
    #     - name: Perform CodeQL Analysis
    #       uses: github/codeql-action/analyze@v3


    unit-test:
          runs-on: ubuntu-latest
          needs: lint-check 

          steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set Up Python
              uses: actions/setup-python@v4
              with:
                python-version: 3.12

            - name: Install Dev Dependencies
              run: |
                pip install --no-cache-dir -r requirements-dev.txt
                pip install pytest
            
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install --no-cache-dir -r ./app/requirements.txt

            - name: Run Tests
              run: |
                pytest ./app/tests

    create-pull-request:
      needs: unit-test 
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Get Branch name
          run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        - name: Create Pull Request
          env:
            GITHUB_TOKEN: ${{secrets.GIT_PAT2}}
          run: |
            if gh pr list --base development --head "$BRANCH_NAME" --state open | grep -q "$BRANCH_NAME"; then
              echo "PR already exists, skipping creation." 
            else
              gh pr create \
                --base development \
                --head "$BRANCH_NAME" \
                --title "Auto PR: Merge $BRANCH_NAME into development" \
                --body "This pull request was automatically created by GitHub Action."
              echo "PR created successfully."
            fi
