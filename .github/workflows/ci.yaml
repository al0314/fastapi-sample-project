name: Code testing

on:
  push:
    branches:
      - 'feature/*'
  workflow_dispatch:




permissions:
  contents: write



jobs:
    lint-check:
      runs-on: ubuntu-latest
      steps:
          - name: Checkout Code
            uses: actions/checkout@v4
          - name: Set up python
            uses: actions/setup-python@v5
            with:
              python-version: 3.12
          
          - name: install dependencies dev
            run: pip install --no-cache-dir -r requirements-dev.txt
      
          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install --no-cache-dir -r ./app/requirements.txt
          - name: Analysing the code with pylint
            run: |
                pylint --exit-zero ./app/
    
    

    # CodeQL_Advanced:
    #   name: CodeQL Advanced
    #   needs: lint-check 
    #   runs-on: ubuntu-latest
    #   permissions:
    #       actions: read
    #       contents: read
    #       security-events: write
    #   steps:
    #     - name: Checkout code
    #       uses: actions/checkout@v2
    #     - name: Set up CodeQL
    #       uses: github/codeql-action/init@v3
    #     - name: Perform CodeQL Analysis
    #       uses: github/codeql-action/analyze@v3


    unit-test:
          runs-on: ubuntu-latest
          needs: lint-check 

          steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set Up Python
              uses: actions/setup-python@v4
              with:
                python-version: 3.12

            - name: Install Dev Dependencies
              run: |
                pip install --no-cache-dir -r requirements-dev.txt
                pip install pytest
            
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install --no-cache-dir -r ./app/requirements.txt

            - name: Run Tests
              run: |
                pytest ./app/tests
    
    auto-merge:
      runs-on: ubuntu-latest
      needs: unit-test

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Setup Git
          run: |
            git config --global user.name "CI-bot"
            git config --global user.email "CI-bot@github.com"
        
        - name: Fetch all branches to ensure we can rebase
          run: git fetch --all
      
        - name: Checkout the dev branch
          run: |
              git checkout -b dev origin/dev
        - name: Merge feature branch into dev
          run: |
            FEATURE_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git merge origin/$FEATURE_BRANCH --no-ff --commit --no-edit
        
        - name: Push merged changes to dev
          run: git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} dev
